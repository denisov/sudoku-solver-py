# На основе
# http://itnotesblog.ru/note.php?id=157
import time

from sudoku_solver_py.solver import solve, Square

#  оч долго решает (2-5 сек)
original_square: Square = [
    [0, 0, 0, 0, 6, 0, 7, 0, 0],
    [0, 5, 9, 0, 0, 0, 0, 0, 0],
    [0, 1, 0, 2, 0, 0, 0, 0, 0],
    [0, 0, 0, 1, 0, 0, 0, 0, 0],
    [6, 0, 0, 5, 0, 0, 0, 0, 0],
    [3, 0, 0, 0, 0, 0, 4, 6, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 9, 1],
    [8, 0, 0, 7, 4, 0, 0, 0, 0]
]


# долго решает (0.03 сек)
# original_square = [
#     [3, 0, 0, 2, 0, 0, 0, 0, 0],
#     [0, 0, 0, 1, 0, 7, 0, 0, 0],
#     [7, 0, 6, 0, 3, 0, 5, 0, 0],
#     [0, 7, 0, 0, 0, 9, 0, 8, 0],
#     [9, 0, 0, 0, 2, 0, 0, 0, 4],
#     [0, 1, 0, 8, 0, 0, 0, 5, 0],
#     [0, 0, 9, 0, 4, 0, 3, 0, 1],
#     [0, 0, 0, 7, 0, 2, 0, 0, 0],
#     [0, 0, 0, 0, 0, 8, 0, 0, 6],
# ]

# Быстро решает (0.0004 сек)
# original_square: Square = [
#     [0, 3, 8, 9, 6, 5, 7, 1, 4],
#     [7, 5, 9, 4, 1, 3, 6, 8, 2],
#     [4, 1, 6, 2, 7, 8, 9, 5, 3],
#
#     [9, 4, 5, 1, 3, 6, 2, 7, 8],
#     [6, 8, 7, 5, 2, 4, 1, 3, 9],
#     [3, 2, 1, 8, 9, 7, 4, 6, 5],
#
#     [0, 0, 0, 3, 5, 9, 8, 4, 7],
#     [5, 7, 4, 6, 8, 2, 3, 9, 1],
#     [8, 9, 3, 7, 4, 1, 0, 0, 0]
# ]

def print_square(square: Square) -> None:
    for row in square:
        print(row)


start_time = time.time()
solved = solve(original_square)
if not solved:
    print(":(")
else:
    print_square(original_square)
print(f'{time.time() - start_time} seconds')
